name: Build Wheels

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      bump-type:
        description: 'Bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  bump-version:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && inputs.bump_version == true
    outputs:
      new_version: ${{ steps.bump.outputs.new_version }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Bump version
      id: bump
      uses: callowayproject/bump-my-version@master
      env:
        BUMPVERSION_TAG: "true"
      with:
        args: ${{ inputs.bump-type }}

    - name: Check
      if: steps.bump.outputs.bumped == 'true'
      run: |
        echo "Version was bumped from ${{ steps.bump.outputs.previous-version }} to ${{ steps.bump.outputs.current-version }}!"

  build:
    needs: bump-version
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            python-version: '3.11'
            platform: linux_x86_64
          - os: ubuntu-22.04
            python-version: '3.12'
            platform: linux_x86_64
          - os: windows-2022
            python-version: '3.11'
            platform: win_amd64
          - os: windows-2022
            python-version: '3.12'
            platform: win_amd64
          - os: macos-14
            python-version: '3.11'
            platform: macosx_10_9_x86_64
          - os: macos-14
            python-version: '3.12'
            platform: macosx_10_9_x86_64
          - os: macos-14
            python-version: '3.11'
            platform: macosx_11_0_arm64
          - os: macos-14
            python-version: '3.12'
            platform: macosx_11_0_arm64

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build wheel scikit-build-core pybind11

    - name: Build wheel
      run: python -m build --wheel

    - name: Upload wheel artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wheel-${{ matrix.platform }}-py${{ matrix.python-version }}
        path: dist/*.whl

  upload:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Upload to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip_existing: true
